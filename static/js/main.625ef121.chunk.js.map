{"version":3,"sources":["components/Header.tsx","actions/types.tsx","actions/asteroidActions.tsx","components/Charts/PieChart.tsx","components/Charts/LineChart.tsx","components/Charts/Charts.tsx","images/asteroid.png","components/Loading.tsx","components/Content.tsx","App.tsx","reportWebVitals.ts","reducers/asteroidReducer.tsx","reducers/index.tsx","store.tsx","index.tsx"],"names":["TimeEnum","GET_ASTEROIDS","ERROR","SET_LOADING","useStyles","makeStyles","header","paddingLeft","paddingRight","width","color","headerTitle","textAlign","fontSize","paddingBottom","transition","timeOptions","marginRight","display","justifyContent","Header","props","getAsteroids","setLoading","classes","useState","TODAY","time","setTime","useEffect","className","Typography","FormControl","component","style","FormLabel","RadioGroup","aria-label","name","value","row","onChange","e","Object","values","forEach","target","FormControlLabel","label","YESTERDAY","control","Radio","TOMORROW","API_KEY","process","NASA_URL","type","PieChartComponent","data","theme","useTheme","pieChartColors","palette","error","main","primary","marginBottom","PieChart","height","Pie","dataKey","cx","cy","outerRadius","innerRadius","fill","map","entry","index","Cell","Legend","align","iconType","layout","verticalAlign","UNITS","meters","long","short","feet","miles","unitsSelect","padding","secondary","light","borderColor","borderRadius","backgroundColor","unitsOption","LineChartComponent","unit","setUnit","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","Line","stroke","activeDot","r","chartsAndDayWrapper","marginTop","flexDirection","alignItems","chartsWrapper","day","fontWeight","Charts","dangerousData","diameterData","asteroid","animation","opacity","transform","transformOrigin","Loading","src","alt","contentWrapper","totalCount","connect","state","asteroids","loading","Container","app","minHeight","dispatch","a","moment","format","subtract","add","console","log","fetch","method","response","json","near_earth_objects","payload","createMuiTheme","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","prepareData","dangerous","safe","push","toString","minValue","estimated_diameter","estimated_diameter_min","maxValue","estimated_diameter_max","is_potentially_hazardous_asteroid","asteroidReducer","action","rootReducer","combineReducers","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.625ef121.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\ninterface HeaderProps {\n  getAsteroids: (day?: TimeEnum) => void;\n  setLoading: () => void;\n}\n\nexport enum TimeEnum {\n  YESTERDAY = \"yesterday\",\n  TODAY = \"today\",\n  TOMORROW = \"tomorrow\",\n}\n\nconst useStyles = makeStyles({\n  header: {\n    paddingLeft: \"10%\",\n    paddingRight: \"10%\",\n    width: \"80%\",\n    color: \"#333\",\n  },\n  headerTitle: {\n    textAlign: \"left\",\n    fontSize: 72,\n    paddingBottom: 30,\n    [\"@media (max-width:900px)\"]: {\n      fontSize: 44,\n      // eslint-disable-line no-useless-computed-key\n      \"-webkit-transition\": \"color 12s, font-size 2s\",\n      \"-moz-transition\": \"color 12s, fontSize 2s\",\n      \"-o-transition\": \"color 12s, fontSize 2s\",\n      transition: \"color 12s, fontSize 2s\",\n    },\n    [\"@media (max-width:600px)\"]: {\n      fontSize: 24,\n      // eslint-disable-line no-useless-computed-key\n      \"-webkit-transition\": \"color 12s, font-size 2s\",\n      \"-moz-transition\": \"color 12s, fontSize 2s\",\n      \"-o-transition\": \"color 12s, fontSize 2s\",\n      transition: \"color 12s, fontSize 2s\",\n    },\n  },\n  timeOptions: {\n    width: \"100%\",\n    marginRight: 20,\n    [\"@media (max-width:800px)\"]: {\n      fontSize: 14,\n      marginRight: 0,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      // eslint-disable-line no-useless-computed-key\n      \"-webkit-transition\": \"font-size 2s, display 2s, justifyContent 2s\",\n      \"-moz-transition\": \"fontSize 2s, display 2s, justifyContent 2s\",\n      \"-o-transition\": \"fontSize 2, display 2s, justifyContent 2ss\",\n      transition: \"fontSize 2s, display 2s, justifyContent 2s\",\n    },\n  },\n});\n\nconst Header = (props: HeaderProps) => {\n  const { getAsteroids, setLoading } = props;\n  const classes = useStyles();\n  const [time, setTime] = useState(TimeEnum.TODAY);\n\n  useEffect(() => {\n    setLoading();\n    getAsteroids(time);\n  }, [time]);\n\n  return (\n    <div className={classes.header}>\n      <Typography className={classes.headerTitle}>\n        near_earth_objects\n      </Typography>\n      <FormControl component=\"fieldset\" style={{ width: \"100%\" }}>\n        <FormLabel component=\"legend\" color=\"secondary\">\n          Select Day\n        </FormLabel>\n        <RadioGroup\n          className={classes.timeOptions}\n          aria-label=\"time\"\n          name=\"time\"\n          value={time}\n          row\n          onChange={(e) =>\n            Object.values(TimeEnum).forEach(\n              (value) => e.target.value === value && setTime(value)\n            )\n          }\n        >\n          <FormControlLabel\n            classes={{ label: classes.timeOptions }}\n            value={TimeEnum.YESTERDAY}\n            control={<Radio />}\n            label={TimeEnum.YESTERDAY}\n          />\n          <FormControlLabel\n            classes={{ label: classes.timeOptions }}\n            value={TimeEnum.TODAY}\n            control={<Radio />}\n            label={TimeEnum.TODAY}\n          />\n          <FormControlLabel\n            classes={{ label: classes.timeOptions }}\n            value={TimeEnum.TOMORROW}\n            control={<Radio />}\n            label={TimeEnum.TOMORROW}\n          />\n        </RadioGroup>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default Header;\n","export const GET_ASTEROIDS = \"GET_ASTEROIDS\";\nexport const ERROR = \"ERROR\";\nexport const SET_LOADING = \"SET_LOADING\";\n","import { GET_ASTEROIDS, ERROR, SET_LOADING } from \"./types\";\nimport moment from \"moment\";\nimport { TimeEnum } from \"../components/Header\";\n\nconst API_KEY = process.env.REACT_APP_NASA_API_KEY;\nconst NASA_URL = \"https://api.nasa.gov\";\n\nexport const getAsteroids = (time: TimeEnum = TimeEnum.TODAY) => async (\n  dispatch: any\n) => {\n  let day = \"\";\n  switch (time) {\n    case TimeEnum.TODAY:\n      day = moment().format(\"YYYY-MM-DD\");\n      break;\n    case TimeEnum.YESTERDAY:\n      day = moment().subtract(1, \"days\").format(\"YYYY-MM-DD\");\n      break;\n    case TimeEnum.TOMORROW:\n      day = moment().add(1, \"days\").format(\"YYYY-MM-DD\");\n      break;\n    default:\n      day = moment().format(\"YYYY-MM-DD\");\n      break;\n  }\n  console.log(\"fetching asteroids\");\n  try {\n    const response = await fetch(\n      `${NASA_URL}/neo/rest/v1/feed?start_date=${day}&end_date=${day}&api_key=${API_KEY}`,\n      {\n        method: \"GET\",\n      }\n    );\n    const data = await response.json();\n    console.log(data.near_earth_objects[day]);\n    dispatch({\n      type: GET_ASTEROIDS,\n      payload: { data: data.near_earth_objects[day], day },\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ERROR,\n      payload: error,\n    });\n  }\n};\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n","import React from \"react\";\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\ninterface ChartProps {\n  data: { name: string; value: number }[];\n}\n\nconst PieChartComponent = (props: ChartProps) => {\n  const { data } = props;\n  const theme = useTheme();\n  const pieChartColors = [theme.palette.error.main, theme.palette.primary.main];\n\n  return (\n    <div>\n      <p style={{ fontSize: 16, textAlign: \"center\", marginBottom: 30 }}>\n        Potentially dangerous vs safe asteroids:\n      </p>\n      <PieChart width={420} height={300}>\n        <Pie\n          data={data}\n          dataKey=\"value\"\n          cx={200}\n          cy={100}\n          outerRadius={80}\n          innerRadius={40}\n          fill=\"#8884d8\"\n          label\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={pieChartColors[index]} />\n          ))}\n        </Pie>\n        <Legend\n          align=\"right\"\n          iconType=\"circle\"\n          layout=\"vertical\"\n          verticalAlign=\"middle\"\n        />\n      </PieChart>\n    </div>\n  );\n};\n\nexport default PieChartComponent;\n","import React, { useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport { DiameterData } from \"../../App\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface ChartProps {\n  data: DiameterData[];\n}\n\nconst UNITS = {\n  meters: { long: \"meters\", short: \"m\" },\n  feet: { long: \"feet\", short: \"ft\" },\n  miles: { long: \"miles\", short: \"mi\" },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  unitsSelect: {\n    padding: 3,\n    color: theme.palette.secondary.light,\n    borderColor: theme.palette.secondary.light,\n    borderRadius: 4,\n    \"& option\": {\n      backgroundColor: theme.palette.secondary.light,\n    },\n  },\n\n  unitsOption: { backgroundColor: theme.palette.secondary.light },\n}));\n\nconst LineChartComponent = (props: ChartProps) => {\n  const classes = useStyles();\n  const { data } = props;\n  const [unit, setUnit] = useState(UNITS.meters);\n\n  return (\n    <div>\n      <p style={{ fontSize: 16, textAlign: \"center\", marginBottom: 30 }}>\n        Diameter in{\" \"}\n        <select\n          className={classes.unitsSelect}\n          value={unit.long}\n          onChange={(e) => {\n            Object.values(UNITS).forEach(\n              (value) => value.long === e.target.value && setUnit(value)\n            );\n          }}\n        >\n          <option className={classes.unitsOption} value={UNITS.meters.long}>\n            {UNITS.meters.long}\n          </option>\n          <option value={UNITS.feet.long}>{UNITS.feet.long}</option>\n          <option>{UNITS.miles.long}</option>\n        </select>\n      </p>\n      <LineChart\n        width={450}\n        height={300}\n        data={data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis unit={unit.short} />\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey={`${unit.long}.minValue`}\n          stroke=\"#534666\"\n          activeDot={{ r: 8 }}\n        />\n        <Line\n          type=\"monotone\"\n          dataKey={`${unit.long}.maxValue`}\n          stroke=\"#138086\"\n        />\n      </LineChart>\n    </div>\n  );\n};\n\nexport default LineChartComponent;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PieChart from \"./PieChart\";\nimport LineChart from \"./LineChart\";\n\ninterface ChartsProps {\n  dangerousData: any;\n  diameterData: any;\n  day: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  chartsAndDayWrapper: {\n    marginTop: 80,\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n  },\n  chartsWrapper: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    [\"@media (max-width:900px)\"]: {\n      flexDirection: \"column\",\n    },\n  },\n  day: {\n    color: theme.palette.primary.main,\n    fontSize: 20,\n    fontWeight: 400,\n  },\n}));\n\nconst Charts = (props: ChartsProps) => {\n  const { dangerousData, diameterData, day } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.chartsAndDayWrapper}>\n      <p className={classes.day}>{day}</p>\n      <div className={classes.chartsWrapper}>\n        <PieChart data={dangerousData} />\n        <LineChart data={diameterData} />\n      </div>\n    </div>\n  );\n};\nexport default Charts;\n","export default __webpack_public_path__ + \"static/media/asteroid.6d4c5c0e.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport asteroid from \"../images/asteroid.png\";\n\nconst useStyles = makeStyles({\n  asteroid: {\n    marginTop: 100,\n    width: 200,\n    height: 200,\n    animation: \"$rotate 1s linear infinite\",\n    opacity: 0.9,\n  },\n  \"@keyframes rotate\": {\n    \"0%\": {\n      transform: \"rotate(0deg)\",\n      transformOrigin: \"50% 50%\",\n    },\n    \"100%\": {\n      transform: \"rotate(360deg)\",\n    },\n  },\n});\n\nconst Loading = () => {\n  const classes = useStyles();\n  return <img className={classes.asteroid} src={asteroid} alt=\"Loading\" />;\n};\n\nexport default Loading;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\nimport { setLoading } from \"../actions/asteroidActions\";\nimport { Asteroid } from \"../reducers/asteroidReducer\";\nimport Charts from \"./Charts/Charts\";\nimport { TimeEnum } from \"./Header\";\nimport Loading from \"./Loading\";\n\ninterface ContentProps {\n  dangerousData: any;\n  diameterData: any;\n  day: string;\n  loading: boolean;\n}\n\nconst useStyles = makeStyles({\n  contentWrapper: {\n    width: \"95%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    color: \"#444\",\n    marginBottom: 100,\n  },\n  totalCount: {\n    fontSize: 24,\n    width: \"90%\",\n  },\n});\n\nconst Content = (props: ContentProps) => {\n  const { dangerousData, diameterData, day, loading } = props;\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.contentWrapper}>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Charts\n          dangerousData={dangerousData}\n          diameterData={diameterData}\n          day={day}\n        />\n      )}\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  asteroids: state.asteroids.asteroids,\n  day: state.asteroids.day,\n  loading: state.asteroids.loading,\n  dangerousData: state.asteroids.dangerousData,\n  diameterData: state.asteroids.diameterData,\n});\n\nexport default connect(mapStateToProps, {\n  setLoading,\n})(Content);\n","import React, {useEffect} from \"react\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { connect } from \"react-redux\";\nimport { getAsteroids, setLoading } from \"./actions/asteroidActions\";\nimport Header from \"./components/Header\";\nimport Content from \"./components/Content\";\nimport {TimeEnum} from './components/Header';\n\ninterface AppProps {\n  getAsteroids: (time?: TimeEnum) => void;\n  setLoading: () => void;\n}\n\nexport interface PieChartData {\n  name: string,\n  value: number,\n}\nexport interface DiameterData {\n  name: string;\n  meters: {\n    minValue: number;\n    maxValue: number;\n  };\n  feet: {\n    minValue: number;\n    maxValue: number;\n  };\n  miles: {\n    minValue: number;\n    maxValue: number;\n  };\n}\n\nconst useStyles = makeStyles({\n  app: {\n    backgroundColor: \"#eee\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    minHeight: \"100vh\",\n  },\n});\n\nconst App = (props: AppProps) => {\n  const { getAsteroids, setLoading } = props;\n\n   useEffect(() => {\n     getAsteroids();\n   }, [getAsteroids]);\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#138086\",\n      },\n      secondary: {\n        main: \"#534666\",\n      },\n      error: {\n        main: \"#CD7672\",\n      },\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.app}>\n        <Header\n          getAsteroids={getAsteroids}\n          setLoading={setLoading}\n        />\n        <Content />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  loading: state.asteroids.loading,\n});\n\nexport default connect(mapStateToProps, {\n  getAsteroids,\n  setLoading\n})(App);\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GET_ASTEROIDS, ERROR, SET_LOADING } from \"../actions/types\";\n\nexport interface Asteroid {\n  url: string;\n  is_potentially_hazardous_asteroid: boolean;\n  estimated_diameter: {\n    meters: {\n      estimated_diameter_min: number;\n      estimated_diameter_max: number;\n    };\n    feet: {\n      estimated_diameter_min: number;\n      estimated_diameter_max: number;\n    };\n    miles: {\n      estimated_diameter_min: number;\n      estimated_diameter_max: number;\n    };\n  };\n}\nexport interface PieChartData {\n  name: string;\n  value: number;\n}\nexport interface DiameterData {\n  name: string;\n  meters: {\n    minValue: number;\n    maxValue: number;\n  };\n  feet: {\n    minValue: number;\n    maxValue: number;\n  };\n  miles: {\n    minValue: number;\n    maxValue: number;\n  };\n}\nexport interface State {\n  asteroids: Asteroid[];\n  dangerousData: PieChartData[];\n  diameterData: DiameterData[];\n  error: string;\n  loading: boolean;\n  day: string;\n}\n\nexport const initialState: State = {\n  asteroids: [],\n  dangerousData: [],\n  diameterData: [],\n  error: \"\",\n  loading: true,\n  day: \"\",\n};\n\nconst prepareData = (asteroids: Asteroid[]) => {\n  let dangerous = 0;\n  let safe = 0;\n  const diameterData: DiameterData[] = [];\n  asteroids.forEach((asteroid, index) => {\n    diameterData.push({\n      name: (index + 1).toString(),\n      meters: {\n        minValue: asteroid.estimated_diameter.meters.estimated_diameter_min,\n        maxValue: asteroid.estimated_diameter.meters.estimated_diameter_max,\n      },\n      feet: {\n        minValue: asteroid.estimated_diameter.feet.estimated_diameter_min,\n        maxValue: asteroid.estimated_diameter.feet.estimated_diameter_max,\n      },\n      miles: {\n        minValue: asteroid.estimated_diameter.miles.estimated_diameter_min,\n        maxValue: asteroid.estimated_diameter.miles.estimated_diameter_max,\n      },\n    });\n    if (asteroid.is_potentially_hazardous_asteroid) {\n      dangerous = dangerous + 1;\n    } else {\n      safe = safe + 1;\n    }\n  });\n\n  return {\n    diameterData,\n    dangerousData: [\n      {\n        name: \"dangerous\",\n        value: dangerous,\n      },\n      {\n        name: \"safe\",\n        value: safe,\n      },\n    ],\n  };\n};\n\nconst asteroidReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case GET_ASTEROIDS:\n      const { diameterData, dangerousData } = prepareData(action.payload.data);\n      return {\n        ...state,\n        asteroids: action.payload.data,\n        dangerousData: dangerousData,\n        diameterData: diameterData,\n        day: action.payload.day,\n        loading: false,\n      };\n    case ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\nexport default asteroidReducer;\n","import { combineReducers } from \"redux\";\nimport asteroidReducer from \"./asteroidReducer\";\n\nconst rootReducer = combineReducers({\n  asteroids: asteroidReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleWare))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}